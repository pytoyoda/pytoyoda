# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: "Upload Python Package to PyPi"

on:
  release:
    types: ["published"]

jobs:
  pypi-publish:
    name: upload release to PyPI
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    steps:
      - name: "⤵️ Check out code from GitHub"
        uses: "actions/checkout@v5"
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: "🐍 Set up Python 3.121"
        uses: "actions/setup-python@v6"
        with:
          python-version: "3.13"

      - name: "⚙️ Install Poetry"
        uses: "abatilo/actions-poetry@v4.0.0"

      # Automatic installation of plugins fails due to https://github.com/python-poetry/poetry/issues/10028
      # so we still do a `self add`
      - name: "⚙️ Install dependencies"
        run: |
          poetry install --without dev
          poetry self add "poetry-dynamic-versioning[plugin]"

      - name: "🚀 Test package building"
        run: "poetry build"

      - name: "📨 Publish package distributions to PyPI"
        uses: pypa/gh-action-pypi-publish@release/v1
